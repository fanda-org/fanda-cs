@model Fanda.ViewModel.Business.PartyViewModel

@{
    ViewData["Title"] = "Edit";
}
@using Fanda.Common.Extensions
@using Fanda.Common.Enums

@section Styles {
    @*<link href="~/lib/jquery-dataTables/css/dataTables.bootstrap4.min.css" rel="stylesheet" />*@
    <link href="~/vendor/datatables.net-bs4/css/dataTables.bootstrap4.css" rel="stylesheet" />
    <link href="~/vendor/bootstrap4c-custom-switch/css/component-custom-switch.css" rel="stylesheet" />
    <link href="~/vendor/select2/css/select2.min.css" rel="stylesheet" />
    @*<link href="~/vendor/select2-theme-bootstrap4/select2-bootstrap.css" rel="stylesheet" />*@
    <link href="~/vendor/select2-bootstrap4-theme/select2-bootstrap4.min.css" rel="stylesheet" />
}

@section Breadcrumbs {

    @{
        var breadcrumbs = new Dictionary<string, string> {
{"Home", "/Home" },
{"Contacts", "/Parties" },
{"Contact", "" }
};
        ViewBag.Breadcrumbs = breadcrumbs;
    }
    <ol class="breadcrumb">
        <!-- BREADCRUMB-ITEMS -->
        <partial name="_breadcrumb-items" />
        <!-- /BREADCRUMB-ITEMS -->
        <!-- BREADCRUMB-MENU -->
        <partial name="_breadcrumb-menu" />
        <!-- /BREADCRUMB-MENU -->
    </ol>
}

<form asp-action="Edit" data-ajax="true" data-ajax-method="POST"
      data-ajax-mode="replace" data-ajax-update="#ajaxresult">
    <div class="card border-info">
        <div class="card-header border-info">
            <span><i class="icon-briefcase"></i> Contact - @ViewBag.Mode</span>
        </div>
        <div class="card-body">
            <div id="ajaxresult">
                <partial name="_partyEdit" model="Model" />
            </div>
        </div>
        <div class="card-footer border-info">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group mb-0">
                        <a class="btn btn-outline-primary" data-toggle="tooltip" title="Back to list" asp-action="Index"><i class="icon-list"></i> Back</a>
                        @if (ViewBag.Mode != "Create")
                        {
                            <button type="button" value="Delete" data-toggle="tooltip" title="Delete" class="btn btn-danger" onclick="Delete();"><i class="icon-trash"></i> Delete</button>
                        }
                        <div class="float-right">
                            @if (ViewBag.Mode == "Create" || ViewBag.Mode == "Edit")
                            {
                                <button type="button" value="Cancel" data-toggle="tooltip" title="Cancel changes and continue edit" class="btn btn-outline-primary" onclick="Cancel();"><i class="icon-close"></i> Cancel</button>
                                <button type="submit" value="Save" data-toggle="tooltip" title="Save changes" class="btn btn-success"><i class="icon-check"></i> Save</button>
                            }
                            @if (ViewBag.Mode == "Details")
                            {
                                <button type="button" value="Edit" data-toggle="tooltip" title="Edit" class="btn btn-primary" onclick="Edit();"><i class="icon-pencil"></i> Edit</button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
@section Scripts {
    @*<script src="~/lib/jquery-dataTables/js/jquery.dataTables.min.js"></script>*@
    <script src="~/vendor/datatables.net/js/jquery.dataTables.js"></script>
    @*<script src="~/lib/jquery-dataTables/js/dataTables.bootstrap4.min.js"></script>*@
    <script src="~/vendor/datatables.net-bs4/js/dataTables.bootstrap4.js"></script>
    <script src="~/vendor/sweetalert/sweetalert.min.js"></script>
    <script src="~/vendor/select2/js/select2.full.min.js"></script>
    <script src="~/js/site.js"></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(function () {
            $(document).ajaxSend(function (e, xhr, options) {
                if (options.type.toUpperCase() == "POST") {
                    var token = $("input[name='__RequestVerificationToken']").val();
                    xhr.setRequestHeader("RequestVerificationToken", token);
                }
            });

            $.fn.resetValidation = function () {
                var $form = this.closest('form');

                //reset jQuery Validate's internals
                $form.validate().resetForm();

                //reset unobtrusive validation summary, if it exists
                $form.find("[data-valmsg-summary=true]")
                    .removeClass("validation-summary-errors")
                    .addClass("validation-summary-valid")
                    .find("ul").empty();

                //reset unobtrusive field level, if it exists
                $form.find("[data-valmsg-replace]")
                    .removeClass("field-validation-error")
                    .addClass("field-validation-valid")
                    .empty();

                return $form;
            };

            $('body').tooltip({ selector: '[data-toggle="tooltip"]' });

            $.fn.select2.defaults.set("theme", "bootstrap");
            //$.fn.select2.defaults.set("theme", "bootstrap4");
            $('#PartyType').select2();
            $('#CategoryId').select2();
            $('#PaymentTerm').select2();

            $('#contacts').DataTable();
        });

        function Delete() {
            swal({
                title: "Are you sure?",
                text: "Do you want to delete this Contact? Once deleted, you will not be able to recover!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        //var dataType = 'application/x-www-form-urlencoded; charset=utf-8';
                        //var data = $('form').serialize();
                        $.ajax({
                            url: "@Url.Action("DeleteConfirmed")",
                            type: 'POST',
                            //dataType: 'json',
                            //contentType: dataType,
                            data: { id: "@Model.PartyId" },
                            success: function (data) {
                                if (data.ok) {
                                    console.log('Deleted successfully!');
                                    swal({
                                        title: "Deleted!", text: "Contact has been deleted!", icon: "success"
                                    })
                                        .then(() => {
                                        window.location = data.url;
                                    });
                                }
                                else {
                                    swal("Error! Error while deleting contact: " + data.message, {
                                        icon: "success",
                                    });
                                    //window.location = data.url;
                                }
                            },
                            error: function (res, textStatus, error) {
                                console.log("Error: ", res, textStatus, error);
                                swal("Failed! Error while deleting contact: " + error, {
                                    icon: "error",
                                });
                            }
                        });
                    } else {
                        swal({ title: "Cancelled!", text: "Contact deletion cancelled!", icon: "info" });
                    }
                });
        };

        function Cancel() {
            @*location.reload();*@
            var active = '@Model.Active' == 'True' ? true : false;

            $('#Code').val('@Model.Code');
            $('#Name').val('@Model.Name');
            $('#RegdNum').val('@Model.RegdNum');
            $('#Active').prop('checked', active);
            $('#Code').focus();
            @*var url = '';
            if('@ViewBag.Mode' == 'Create')
            {
                url = '@Url.Action("Create", new { id = "-1" })';
            }
            else
            {
                url = '@Url.Action("Edit", new { id = "-1" })';
            }
            var id = "@Model.PartyId";
            url = url.replace('-1', id);
            window.location = url;*@
        };

        function Edit() {
            var id = "@Model.PartyId";
            var url = '@Url.Action("Edit", new { id = "-1" })';
            url = url.replace('-1', id);
            window.location = url;
        };

        /*
         * Contacts
         */
        $(document).ready(function () {
            $(document).on("click", "#btnAddContact", function () {
                var nextIndex = $("table#contacts tbody tr").length;
                $.ajax({
                    url: '@Url.Action("AddContact")',
                    type: 'POST',
                    data: { index: nextIndex },
                    success: function (results) {
                        $("table#contacts tbody").append(results);
                    }
                });

                //$('form').unbind();
                //$('form').data('validator', null);
                //$.validator.unobtrusive.parse(document);

                // Find the affected form
                var $form = $('table#contacts tbody tr:last').closest('form');  //$tr.closest("FORM");
                console.log($form);

                // Unbind existing validation
                $form.unbind();
                $form.data("validator", null);

                // Check document for changes
                $.validator.unobtrusive.parse(document);

                // Re add validation with changes
                $form.validate($form.data("unobtrusiveValidation").options);
            });

            $("table#contacts").on("click", "#btnRemoveContact", function () {
                $(this).closest('tr').hide();
                $(this).prev('input').val('true');
            });
        });
    </script>
}