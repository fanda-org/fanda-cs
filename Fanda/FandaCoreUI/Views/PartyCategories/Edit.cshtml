@model PartyCategoryDto

@{
    ViewData["Title"] = "Edit";
}

@section Styles {
    @*<link href="~/vendor/bootstrap4c-custom-switch/css/component-custom-switch.css" rel="stylesheet" />*@
}

@section Breadcrumbs {
    @{
        var breadcrumbs = new Dictionary<string, string>()
{
            {"Home","/Home" },
            {"Contact Categories","/PartyCategories" },
            {"Contact Category","" }
        };
        ViewBag.Breadcrumbs = breadcrumbs;
    }
    <ol class="breadcrumb">
        <!-- BREADCRUMB-ITEMS -->
        <partial name="_breadcrumb-items" />
        <!-- /BREADCRUMB-ITEMS -->
        <!-- BREADCRUMB-MENU -->
        <partial name="_breadcrumb-menu" />
        <!-- /BREADCRUMB-MENU -->
    </ol>
}

<form asp-action="Edit">
    <div class="card rounded shadow-sm">
        <div class="card-header">
            <span><i class="icon-briefcase"></i> Contact Category - @ViewBag.Mode</span>
        </div>
        <div class="card-body">
            @Html.HiddenFor(model => model.CategoryId)
            <div class="row">
                @if (ViewData.ModelState.Values.Any() && ViewData.ModelState.ErrorCount > 0)
                {
                    <div class="col-md-12">
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @{
                                foreach (var modelState in ViewData.ModelState.Values)
                                {
                                    foreach (var error in modelState.Errors)
                                    {
                                        <span>@error.ErrorMessage</span>
                                    }
                                }
                            }
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    </div>
                }
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Code" class="control-label"></label>
                        @if (ViewBag.Readonly)
                        {
                            <input asp-for="Code" class="form-control text-uppercase form-control-sm" readonly />
                        }
                        else
                        {
                            <input asp-for="Code" class="form-control input-uppercase form-control-sm" autofocus />
                        }
                        <span asp-validation-for="Code" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Name" class="control-label"></label>
                        @if (ViewBag.Readonly)
                        {
                            <input asp-for="Name" class="form-control form-control-sm" readonly />
                        }
                        else
                        {
                            <input asp-for="Name" class="form-control form-control-sm" />
                        }
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Description" class="control-label"></label>
                        @if (ViewBag.Readonly)
                        {
                            <input asp-for="Description" class="form-control form-control-sm" readonly />
                        }
                        else
                        {
                            <input asp-for="Description" class="form-control form-control-sm" />
                        }
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @*<div class="custom-control custom-checkbox">
                            <input class="custom-control-input" type="checkbox" asp-for="Active" id="Active" />
                            <label class="custom-control-label" for="Active">@Html.DisplayNameFor(model => model.Active)</label>
                            </div>*@
                        @*<label asp-for="Active" class="control-label">*@
                        <label class="control-label" asp-for="Active"></label>
                        <div class="custom-control custom-switch">
                            <input type="checkbox" class="custom-control-input" asp-for="Active" >
                            <label class="custom-control-label" asp-for="Active">&nbsp;</label>
                        </div>
                        @*<div class="custom-switch custom-switch-xs custom-switch-label-io">
                            @if (ViewBag.Readonly)
                            {
                                <input class="custom-switch-input" asp-for="Active" type="checkbox" disabled readonly>
                            }
                            else
                            {
                                <input class="custom-switch-input" asp-for="Active" type="checkbox">
                            }
                            <label class="custom-switch-btn" for="Active"></label>
                        </div>*@
                        @*<input asp-for="Active" type="checkbox" class="form-control form-check" data-toggle="toggle" data-size="normal" data-on="Active" data-off="Inactive" data-onstyle="primary" data-offstyle="secondary">*@
                        @*</label>*@
                    </div>
                </div>
            </div>
            @*@if (ViewBag.Mode != "Create")
                {
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-0">
                                <label asp-for="DateCreated" class="control-label"></label>
                                <input asp-for="DateCreated" class="form-control" type="text" readonly />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-0">
                                <label asp-for="DateModified" class="control-label"></label>
                                <input asp-for="DateModified" class="form-control" type="text" readonly tabindex="-1" />
                            </div>
                        </div>
                    </div>
                }*@
        </div>
        <div class="card-footer border-info">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group mb-0">
                        <a class="btn btn-outline-primary btn-sm" data-toggle="tooltip" title="Back to list" asp-action="Index"><i class="icon-list"></i> Back</a>
                        <button type="button" id="btnDelete" value="Delete" data-toggle="tooltip" title="Delete" class="btn btn-danger btn-sm"><i class="icon-trash"></i> Delete</button>
                        <div class="float-right">
                            <button type="button" id="btnEdit" value="Edit" data-toggle="tooltip" title="Edit" class="btn btn-primary btn-sm"><i class="icon-pencil"></i> Edit</button>
                            <button type="button" id="btnCancel" value="Cancel" data-toggle="tooltip" title="Cancel changes and continue edit" class="btn btn-outline-primary btn-sm"><i class="icon-close"></i> Cancel</button>
                            <button type="submit" id="btnSave" value="Save" data-toggle="tooltip" title="Save changes" class="btn btn-success btn-sm"><i class="icon-check"></i> Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/vendor/sweetalert/sweetalert.min.js"></script>
    <script src="~/js/site.js"></script>

    <script>
        $(function () {
            $('body').tooltip({ selector: '[data-toggle="tooltip"]' });

            if ('@ViewBag.Mode' === 'Create')
                $('#btnDelete').hide();
            if ('@ViewBag.Mode' !== 'Create' && '@ViewBag.Mode' !== 'Edit') {
                $('#btnCancel').hide();
                $('#btnSave').hide();
            }
            if ('@ViewBag.Mode' !== 'Details')
                $('#btnEdit').hide();

            $('#btnDelete').click(function () {
                            swal({
                                title: "Are you sure?",
                    text: "Do you want to delete this Contact Category? Once deleted, you will not be able to recover!",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
                .then((willDelete) => {
                 if (willDelete) {
                        //var dataType = 'application/x-www-form-urlencoded; charset=utf-8';
                        //var data = $('form').serialize();
                        $.ajax({
                         url: "@Url.Action("DeleteConfirmed")",
                            type: 'POST',
                            //dataType: 'json',
                            //contentType: dataType,
                            data: { id: "@Model.CategoryId" },
                            success: function (data) {
                             if (data.ok) {
                                 console.log('Deleted successfully!');
                                 swal({
                                     title: "Deleted!", text: "Contact category has been deleted!", icon: "success"
                                    })
                                        .then(() => {
                                            window.location = data.url;
                                        });
                        }
                                else {
                            swal("Error! Error while deleting category: " + data.message, {
                                icon: "success",
                                    });
                            //window.location = data.url;
                        }
                    },
                            error: function (res, textStatus, error) {
                        console.log("Error: ", res, textStatus, error);
                        swal("Failed! Error while deleting category: " + error, {
                            icon: "error",
                                });
                    }
                });
                    } else {
                        swal({ title: "Cancelled!", text: "Contact category deletion cancelled!", icon: "info" });
                    }
                });
            });

            $('#btnCancel').click(function () {
                var active = '@Model.Active' == 'True' ? true : false;

                $('#Code').val('@Model.Code');
                $('#Name').val('@Model.Name');
                $('#Description').val('@Model.Description');
                $('#Active').prop('checked', active);
                $('#Code').focus();
            });

            $('#btnEdit').click(function () {
                @*var id = "@Model.CategoryId";
                var url = '@Url.Action("Edit", new { id = "-1" })';
                url = url.replace('-1', id);
                window.location = url;*@
                @{
                    ViewBag.Mode = "Edit";
                    ViewBag.Readonly = false;
                }
                $('#Code').prop('readonly', false);
                $('#Name').prop('readonly', false);
                $('#Description').prop('readonly', false);
                $('#Active').prop('readonly', false);
                $('#Active').prop('disabled', false);

                $('#btnEdit').hide();
                $('#btnCancel').show();
                $('#btnSave').show();

                $('#Code').focus();
            });

            $(document).ajaxSend(function (e, xhr, options) {
                if (options.type.toUpperCase() == "POST") {
                    var token = $("input[name='__RequestVerificationToken']").val();
                    xhr.setRequestHeader("RequestVerificationToken", token);
                }
            });
        });
    </script>
}