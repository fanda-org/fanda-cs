@model IEnumerable<Fanda.ViewModel.Business.PartyCategoryViewModel>

@{
    ViewData["Title"] = "Party Categories";
}

<div class="card rounded border-info">
    <div class="card-header border-info">
        <i class="icon-briefcase"></i> Contact Categories
    </div>
    <div class="card-body">
        <div class="form-group row">
            <div class="col-auto">
                @{
                    var lstShow = new[] { new SelectListItem("10", "10", true), new SelectListItem("25", "25"), new SelectListItem("50", "50"), new SelectListItem("100", "100") };
                }
                <div class="input-group">
                    <div class=" input-group align-items-center">
                        <label class="col-form-label">Show &nbsp;</label>
                        @Html.DropDownList("ddlShow", lstShow, new { @class = "custom-select", title = "Show" })
                        <label class="col-form-label">&nbsp; entries</label>
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="input-group align-items-center">
                    <label class="col-form-label" data-toggle="tooltip" title="List"><i class="icon-list"></i></label>
                    <a class="btn btn-toolbar" href="#">Active</a><span style="color:lightgray;">|</span>
                    <a class="btn" href="#">Inactive</a><span style="color:lightgray;">|</span>
                    <a class="btn" href="#">Both</a>
                </div>
            </div>
            @*<div class="col">
                    @{
                        var lstSort = new[] { new SelectListItem("Code", "Code", true), new SelectListItem("Name", "Name"), new SelectListItem("Description", "Description"), new SelectListItem("Active", "Active") };
                    }
                    <div class="input-group align-items-center">
                        <label class="col-form-label" data-toggle="tooltip" title="Sort"><i class="icon-directions"></i>&nbsp;</label>
                        @Html.DropDownList("ddlSort", lstSort, new { @class = "custom-select", title = "Sort" })
                    </div>
                </div>*@
            <div class="col pull-right">
                <div class="input-group">
                    <a class="btn btn-outline-primary" asp-area="" asp-controller="PartyCategories" asp-action="Create">
                        <i class="icon-plus"></i> Create New
                    </a>
                    @*<a class="btn" href="#"><i class="icon-pencil"></i> Edit</a>
                        <a class="btn" href="#"><i class="icon-close"></i> Delete</a>*@
                </div>
            </div>
            @*<div class="col pull-right">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <div class="input-group-text"><i class="icon-magnifier"></i>&nbsp;</div>
                        </div>
                        @Html.TextBox("txtSearch", "", new { @class = "form-control", @placeholder = "Search" })
                    </div>
                </div>*@
        </div>
        <div class="form-row">
            <table id="tblData" class="table table-sm table-responsive-sm table-striped table-align-middle table-hover sortable">
                <thead>
                    <tr>
                        <th class="text-center pl-1 pr-1 m-1">
                            <div class="custom-control custom-checkbox">
                                @Html.CheckBox("chkAll", false, new { @class = "custom-control-input" })
                                <label class="custom-control-label" for="chkAll">&nbsp;</label>
                            </div>
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(model => model.Code)*@
                            @Html.ActionLink("Code", "Get", "PartyCategories", new { sorts = "Code" }, new { @class = "btn font-weight-bold p-0" })
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(model => model.Name)*@
                            @Html.ActionLink("Name", "Get", "PartyCategories", new { sorts = "Name" }, new { @class = "btn font-weight-bold p-0" })
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(model => model.Description)*@
                            @Html.ActionLink("Description", "Get", "PartyCategories", new { sorts = "Description" }, new { @class = "btn font-weight-bold p-0" })
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Active)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="text-center pl-1 pr-1 m-1">
                                <div class="custom-control custom-checkbox">
                                    @Html.CheckBox("check-" + item.CategoryId, false, new { @class = "custom-control-input" })
                                    <label class="custom-control-label" for="check-@item.CategoryId">&nbsp;</label>
                                </div>
                            </td>
                            <td>
                                @*@Html.DisplayFor(modelItem => item.Code)*@
                                @Html.ActionLink(item.Code, "Details", new { id = item.CategoryId })
                            </td>
                            <td>
                                @*@Html.DisplayFor(modelItem => item.Name)*@
                                @Html.ActionLink(item.Name, "Details", new { id = item.CategoryId })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @*@Html.DisplayFor(modelItem => item.Active)*@
                                <span class="@ActiveClass(item.Active)">@IsActive(item.Active)</span>
                            </td>
                            <td>
                                <div class="btn-group btn-group-sm" role="group">
                                    <a class="btn btn-sm btn-primary" asp-area="" asp-controller="PartyCategories" asp-action="@Url.Action("Edit",new { id = item.CategoryId })">
                                        <i class="icon-pencil"></i> Edit
                                    </a>
                                    <a class="btn btn-sm btn-danger" asp-area="" asp-controller="PartyCategories" asp-action="@Url.Action("Delete",new { id = item.CategoryId })">
                                        <i class="icon-close"></i> Delete
                                    </a>
                                    @*@Html.ActionLink("Edit", "Edit", new { id = item.CategoryId }, new { @class = "btn btn-sm btn-group-sm btn-info" })*@
                                    @*@Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |*@
                                    @*@Html.ActionLink("Delete", "Delete", new { id = item.CategoryId }, new { @class = "btn btn-sm btn-danger" })*@
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <dv class="form-row">
        </dv>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {

            $('#chkAll').click(function () {
                var isChecked = $("#chkAll").prop("checked");
                $('#tblData tr:has(td)').find('input[type="checkbox"]').prop('checked', isChecked);
            });

            $('#tblData tr:has(td)').find('input[type="checkbox"]').click(function () {
                var isChecked = $(this).prop("checked");
                var isHeaderChecked = $("#chkAll").prop("checked");
                if (isChecked == false & isHeaderChecked)
                    $("#chkAll").prop('checked', isChecked);
                else {
                    $('#tblData tr:has(td)').find('input[type="checkbox"]').each(function () {
                        if ($(this).prop("checked") == false)
                            isChecked = false;
                    });
                    $("#chkAll").prop('checked', isChecked);
                }
            });

        });
    </script>
}

@functions{
    public static string IsActive(bool value)
    {
        return value ? "Active" : "Inactive";
    }
    public static string ActiveClass(bool value)
    {
        return "badge " + (value ? "badge-success" : "badge-secondary");
    }
}